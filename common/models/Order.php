<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "order".
 *
 * @property int $id
 * @property int|null $user_id
 * @property string|null $fio
 * @property string|null $address
 * @property string|null $phone
 * @property string|null $comment
 * @property int|null $payment_type
 * @property float|null $amount
 *
 * @property OrderProducts[] $orderProducts
 */
class Order extends \soft\db\SActiveRecord
{
    /**
     * {@inheritdoc}
     */


    public static function tableName()
    {
        return 'order';
    }

    public function behaviors()
    {
        return [
            ['class' => TimestampBehavior::class]
        ];
    }


    public function beforeSave($insert)
    {

        $this->order_status_id = 6;

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $products = Yii::$app->cart->items;
        $productsObjects = Yii::$app->cart->getProducts();
        foreach ($products as $id => $qty) {
            $product = $productsObjects[$id];
            $order_product = new OrderProducts();
            $order_product->order_id = $this->id;
            $order_product->product_id = $product->id;
            $order_product->product_price = $product->sale_price;
            $order_product->quantity = $qty;
            if($order_product->save()){

                $product->order_count = intval($product->order_count) + $qty;
                $product->save();

            }
        }
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [


            [['fio', 'address', 'phone', 'payment_type'], 'required'],
            [['order_status_id', 'user_id', 'payment_type', 'created_at', 'updated_at'], 'integer'],
            [['comment'], 'string'],
            [['amount'], 'number'],
            [['amount'], 'required'],
            [['fio', 'address', 'phone'], 'string', 'max' => 255],

        ];
    }

    /**
     * {@inheritdoc}
     */
    public function setAttributeLabels()
    {
        return [
            'fio' => Yii::t('app', 'Fio'),
            'user.fullname' => Yii::t('app', 'Customer'),
            'user.phone' => Yii::t('app', 'Phone number'),
            'user.email' => Yii::t('app', 'Email'),
            'address' => Yii::t('app', 'Address'),
            'fio' => Yii::t('app', 'FIO'),
            'phone' => Yii::t('app', 'Phone'),
            'comment' => Yii::t('app', 'Comment'),
            'payment_type' => Yii::t('app', 'Payment Type'),
            'amount' => Yii::t('app', 'Amount'),
        ];
    }

    /**
     * Gets query for [[OrderProducts]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getOrderProducts()
    {
        return $this->hasMany(OrderProducts::className(), ['order_id' => 'id']);
    }

    public function getPaymentType()
    {
        return $this->hasOne(PaymentTypes::className(), ['id' => 'payment_type']);
    }

    public function getOrderStatus()
    {
        return $this->hasOne(OrderStatus::className(), ['id' => 'order_status_id']);
    }


    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }


}
