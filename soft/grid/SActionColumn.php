<?php/** * @copyright Copyright &copy; Shukurullo Odilov,  2020 * @package yii2-custom-soft (Odilov) * @version 1.0.0 */namespace soft\grid;use Yii;use kartik\grid\ActionColumn;use soft\helpers\SHtml;use soft\helpers\SUrl;class SActionColumn extends ActionColumn{	public $urls = [];	public $width = '150px';	public $vAlign = 'middle';	public $dropdown = false;	public function init()	{		$this->visibleButtons = array_merge([			'view' => function($model, $key, $index){				return $model->isViewable;			},			'update' => function($model, $key, $index){				return $model->isUpdatable;			},			'delete' => function($model, $key, $index){				return $model->isDeletable;			}		], $this->visibleButtons);		$this->urls = array_merge([			'delete' =>  function($action, $model, $key, $index){				return SUrl::to(['/general/delete-model', 'modelClass' => $model->className(), 'id' => $key ]);			},		], $this->urls) ;		$this->viewOptions = array_merge([		    'title'=>Yii::t('app', "View" ),            'data-toggle'=>'tooltip',            'data-pjax' => 0,            'class' => 'btn btn-info btn-xs'        ], $this->viewOptions);		$this->updateOptions = array_merge([		    'title'=>Yii::t('app', 'Update'),            'data-toggle'=>'tooltip',            'data-pjax' => 0,            'class' => 'btn btn-primary btn-xs',        ], $this->updateOptions);		$this->deleteOptions = array_merge([			'class' => 'btn btn-danger btn-xs',            'role'=>'modal-remote',            'title'=> Yii::t('app', "Delete"),            'data-request-method'=>'post',            'data-toggle'=>'tooltip',	        'data-confirm-title'=> Yii::t('app', 'Are you sure?'),	        'data-confirm-message'=> Yii::t('app', 'Are you sure want to delete this item?'),	    ], $this->deleteOptions);		parent::init();	}	public function createUrl($action, $model, $key, $index)	{		if (isset($this->urls[$action]) &&  is_callable($this->urls[$action])) {			return call_user_func($this->urls[$action], $action, $model, $key, $index, $this);		}		if (is_callable($this->urlCreator)) {			return call_user_func($this->urlCreator, $action, $model, $key, $index, $this);		}		$params = is_array($key) ? $key : ['id' => (string) $key];		$params[0] = $this->controller ? $this->controller . '/' . $action : $action;		return SUrl::toRoute($params);	}    }