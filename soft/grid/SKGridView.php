<?phpnamespace soft\grid;use soft\helpers\SArray;use Yii;use kartik\grid\GridView;use yii\helpers\ArrayHelper;use soft\helpers\SUrl;use soft\helpers\SHtml;use soft\service\Attribute;use soft\widget\SButton;use soft\widget\SBulkButtons;use soft\widget\SStyle;use soft\extra\STemplate;/** * @author Shukurullo Odilov */class SKGridView extends GridView{    use SKGridViewTrait;    public $pjax = true;    public $striped = true;    public $condensed = true;    public $responsive = true;    public $panel = [];    public $cols = [];    public $config = [];    public $_config = [];    public $columns = [];    public $columnVars = [];    public $serialColumn = true;    public $toolbarTemplate = -1;    public $toolbarButtons = [];    public $bulkButtonsTemplate = -1;    public $bulkButtons = [];    public function defaultValues()    {        return [            'panel' => [                'type' => 'primary',                'after' => "{bulk-buttons}",            ],            'toolbarButtons' => [           /*     'create' => [                    'modal' => false,                    'pjax' => false,                    'url' => SUrl::to(['create']),                    'style' => SStyle::btnStyle['default'],                    'icon' => 'plus',                    'title' => Yii::t('app', 'Create new'),                ],*/                'refresh' => [                    'url' => SUrl::current(),                    'style' => SStyle::btnStyle['default'],                    'icon' => 'refresh',                    'title' => Yii::t('app', 'Refresh'),                ],            ],            'bulkButtons' => [                'delete' => [                    "confirmMessage" => Yii::t('app', 'Are you sure to delete all selected items?'),                    'label' => Yii::t('app', "Delete"),                    'url' => SUrl::to(['/general/bulk-delete-models', 'modelClass' => $this->getModelClass()]),                    'icon' => 'trash',                    'style' => 'btn-danger',                    'title' => Yii::t('app', 'Delete selected items'),				],			],		];	}    public function run()    {        // COLUMNS        $model = new $this->dataProvider->query->modelClass;        // Add serial Column if no exist        if ($this->serialColumn && !in_array("serialColumn", $this->cols)) {            array_unshift($this->cols, 'serialColumn');        }        // Init columns        $this->columns = Attribute::selectColumns($model, $this->cols, $this->columnVars);        parent::init();        // Defaults        $default = $this->defaultValues();        $this->panel = ArrayHelper::merge($default['panel'], $this->panel);        $this->toolbarButtons = ArrayHelper::merge($default['toolbarButtons'], $this->toolbarButtons);        if ($this->bulkButtons != false){            $this->bulkButtons = ArrayHelper::merge($default['bulkButtons'], $this->bulkButtons);        }        $this->_config = ArrayHelper::merge($this->_config,  $this->config);        //Toolbar  Buttons        $this->toolbar = [            [                'content' => $this->renderToolbarButtons() . $this->renderPagerDropdown(),            ]        ];        if ($this->panel['after'] == '{bulk-buttons}') {            $this->panel['after'] = $this->renderBulkButtons();        }        SArray::setValueIfNoValid($this->panel, 'heading', $this->view->title);        $this->pager = array_merge([            'class' => \frontend\components\LinkPager::class,            'maxButtonCount' => 10,            'prevPageCssClass' => 'prev hidden-xs',            'nextPageCssClass' => 'next hidden-xs',            'activePageAsLink' => false], $this->pager);        //			Run        parent::run();    }    /**     * Default columns     */    public static function defaultColumns()    {        return [            'image' => [                'filter' => false,                'attribute' => 'image',                'format' => ['image', ['height' => '100px']],            ],            'status' => [                'attribute' => 'status',                'format' => 'status',                'vAlign' => 'middle',                'filter' => [0 => Yii::t('app', 'Inactive'), 1 => Yii::t('app', 'Active')],            ],            'updated_at' => [                'attribute' => 'updated_at',                'format' => 'dateTimeUz',            ],            'created_at' => [                'attribute' => 'created_at',                'format' => 'dateTimeUz',            ],            'serialColumn' => [                'class' => 'kartik\grid\SerialColumn',                'width' => '30px',            ],            'checkboxColumn' => [                'class' => 'kartik\grid\CheckboxColumn',                'width' => '20px',            ],            'radioColumn' => [                'class' => 'kartik\grid\RadioColumn',                'width' => '20px',            ],            'actionColumn' => [                'class' => 'soft\grid\SActionColumn',                'width' => '100px',            ],        ];    }    public function renderToolbarButtons()    {		if ($this->toolbarButtons == false || $this->toolbarButtons == ''){			return "";		}		if (!is_array($this->toolbarButtons)){			return $this->toolbarButtons;		}        $buttons = [];        foreach ($this->toolbarButtons as $buttonName => $buttonConfig) {            $buttons[$buttonName] = SButton::widget([                'config' => $buttonConfig            ]);        }        return STemplate::widget([            'template' => $this->toolbarTemplate,            'items' => $buttons,        ]);    }    public function renderBulkButtons()    {    	if (!is_array($this->bulkButtons)){    		return $this->bulkButtons;		}        return SBulkButtons::widget([            'template' => $this->bulkButtonsTemplate,            'buttons' => $this->bulkButtons,        ]);    }    public function getModelClass()    {        return $this->dataProvider->query->modelClass;    }}?>