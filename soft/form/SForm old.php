<?php namespace soft\form;use kartik\builder\Form;use kartik\form\ActiveField;use soft\helpers\SArray;use soft\service\InputType;use yeesoft\multilingual\widgets\ActiveForm as MActiveRecord;use yii\base\InvalidConfigException;use yii\helpers\ArrayHelper;use yii\helpers\ReplaceArrayValue;use yii\widgets\InputWidget;/**	 * @author Shukurullo Odilov 	 * Usage: 	 *  'attributes' => [        'user_id' => [            'mapConfig' => [                'items' => $users,                'from' => 'id',                'to' => 'username',            ]        ],        'id',        'password' => [            'type' => Form::INPUT_PASSWORD,            'options' => [                'placeholder' => 'Enter name',            ]        ],	 */        class SForm_old extends Form        {        	public  $attributeDefaults = ['type' => Form::INPUT_TEXT];        	public const INPUT_SELECT2 = 'select2';        	public const INPUT_SELECT2_WIDGET = '\kartik\widgets\Select2';        	public static $basicInputs = [        		self::INPUT_TEXT => true,        		self::INPUT_PASSWORD => true,        		self::INPUT_TEXTAREA => true,        		self::INPUT_FILE => true,        		self::INPUT_HIDDEN => true,        		self::INPUT_STATIC => true,        	];        	public static $dropdownInputs = [        		self::INPUT_DROPDOWN_LIST => true,        		self::INPUT_LIST_BOX => true,        		self::INPUT_CHECKBOX_LIST => true,        		self::INPUT_RADIO_LIST => true,        		self::INPUT_CHECKBOX_BUTTON_GROUP => true,        		self::INPUT_RADIO_BUTTON_GROUP => true,        		self::INPUT_MULTISELECT => true,        		self::INPUT_SELECT2 => true,        	];        	public function init()        	{        		$this->generateAttributes();        		parent::init();        	}        	/**        	 * Form builder attributelarni generatsiya qilish.             * Agar $this->attributes empty bo'lsa, $this->model->scenario bo'yicha             * attributelarni generatsiya qiladi        	 * */        	public function generateAttributes(){        		if (empty($this->attributes)  ) {        			$this->attributes = SArray::getValue($this->model->scenarios(), $this->model->scenario, []);        		}        		$attributes = [];        		foreach ($this->attributes as $key => $value) {                    if (is_string($value)) { // agar berilgan qiymat faqat attribut nomidan iborat bo'lsa                        $attributeConfigs = $this->generateConfigs($value);                        $attributes[$value] = $attributeConfigs;                     }                     else{                        $attributeConfigs = $this->generateConfigs($key, $value);                        $attributes[$key] = $attributeConfigs;                     }                 }        		$this->attributes = $attributes;		    }		/**		 * Kartik FormBuilder uchun configni generatsiya qilish		 * $customConfigs - bu SForm builderni generatsiya qilayotganda user tomonidan         * berilgan configlar		*/				public function generateConfigs($attribute, $customConfigs = []){			$model = $this->model;			$attributeConfigs = $model->getAttributeConfigs($attribute);			SArray::keyReplace($attributeConfigs, 'inputType', 'type', 'textInput');            $config = SArray::mergeReplace($attributeConfigs , $customConfigs, ['items', 'options', 'map.array']);            $model->generateItems($config);//            set configs for input widget            if (InputType::getInputCategory($config['type']) == 'widgets'){                $config['widgetClass'] = $config['type'];                $config['type'] = InputType::WIDGET;                // set configs for [[kartik\widgets\Select2]]                if ($config['widgetClass'] == InputType::SELECT2 ) {                    $config['options']['data'] = $config['items'];                    unset($config['items']);                    $config['options']['pluginOptions']['allowClear'] = true;                    SArray::setValueIfNoValid($config, 'options.options.placeholder' , \Yii::t('app', 'Select...'));                }            }	    	return $config;	    }	}	?>