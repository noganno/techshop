<?php


namespace api\modules\v1\controllers;

use api\modules\v1\models\FastOrder;
use yii;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\VerbFilter;
use yii\rest\ActiveController;

class FastOrderController extends ActiveController
{
    public $modelClass = 'frontend\models\FastOrder';
//    public $serializer = [
//        'class' => 'yii\rest\Serializer',
//        'collectionEnvelope' => 'items',
//    ];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        Yii::$app->language = Yii::$app->request->get('lang');

    }

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => HttpBearerAuth::className(),
        ];
        $behaviors['verbs'] = [
            'class' => VerbFilter::className(),
            'actions' => [
                'send-code' => ['post'],
            ],
        ];
        return $behaviors;
    }

    public function actionSendCode()
    {

        $code = mt_rand(10000, 99999);
        $phone = Yii::$app->request->post('phone');
        $message = Yii::t('app', 'Activation code of your account on {hostInfo}: Verify code: {code}', [
            'hostInfo' => Yii::$app->request->hostInfo,
            'code' => $code,
        ]);
        if (Yii::$app->sms->sendMessage($phone, $message)) {
            return [
                'status' => true,
                'message' => Yii::t('app', 'SMS sended'),
                'code' => 213,
                'code' => $code,
                'phone' => $phone,
                'datetime' => date("U")
            ];
        } else {
            return [
                'status' => false,
                'code' => 214,
                'message' => Yii::t('app', 'Something went wrong!')
            ];

        }

    }

    public function actionAdd()
    {
//        name
//        product_id
//        count
//        tel
        $phone = Yii::$app->request->post('phone');
        $name = Yii::$app->request->post('name');
        $product_id = Yii::$app->request->post('product_id');
        $count = Yii::$app->request->post('count');

        $fastOrder = new FastOrder();
        $fastOrder->name = $name;
        $fastOrder->phone = $phone;
        $fastOrder->product_id = $product_id;
        $fastOrder->count = $count;

        if ($fastOrder->validate()) {
            $fastOrder->sendMail();
            return [
                'status' => true,
                'message' => Yii::t('app', 'You order has been accepted')
            ];

        } else {
            return [
                'status' => false,
                'errors' => $fastOrder->getErrorSummary(true)
            ];
        }
    }


//    public function checkAccess($action, $model = null, $params = [])
//    {
//        // check if the user can access $action and $model
//        // throw ForbiddenHttpException if access should be denied
//        if ($action === 'update' || $action === 'delete') {
//            if ($model->author_id !== \Yii::$app->user->id)
//                throw new \yii\web\ForbiddenHttpException(sprintf('You can only %s articles that you\'ve created.', $action));
//        }
//    }

}